# 1.Write a Python program to count the number of digits in an integer.
count=0
number = int(input())
while (number>0):
  number= number//10
  count= count+1
print("Total number of digits is:", count)

# 2.Write a Python program to find if the given numbers are Friendly pair or not (Amicable or not)
num1 = int(input())
num2 = int(input())
sum1 = 0
sum2 = 0
for i in range(1,num1,num2):
  if(num1 % i == 0):
        sum1 = sum1 + i
        print("Friendly Pair")
  elif(num2 % i == 0):
      sum2 = sum2 + i
      print("Friendly Pair")
  elif(sum1 == num1 and sum2 == num2):
      print("Friendly Pair")
  else:
	    print("Not Friendly Pair")

1# 3.Write a Python program to print Pascal's triangle. Pascalâ€™s triangle is a triangular array of binomial coefficients.

n=int(input("Enter number of rows: "))
a=[]
for i in range(n):
    a.append([])
    a[i].append(1)
    for j in range(1,i):
        a[i].append(a[i-1][j-1]+a[i-1][j])
    if(n!=0):
        a[i].append(1)
for i in range(n):
    print("   "*(n-i),end=" ",sep=" ")
    for j in range(0,i+1):
        print('{0:6}'.format(a[i][j]),end=" ",sep=" ")
    print()

# 4.Write a Python program to calculate the maximum number of handshakes. Given a positive integer n, find out the total number of handshakes possible.
def maxHandshake(n): 
  return int((n * (n - 1)) / 2) 

n =int(input())
print(maxHandshake(n)) 

# 5.Write a Python program to print all the Armstrong numbers between the two intervals. A number is said to be an Armstrong number when the sum of the nth power of digit of the number is equal to the number itself.

num = int(input("Enter a number: "))  
sum = 0  
temp = num  
  
while temp > 0:  
   digit = temp % 10  
   sum += digit ** 3  
   temp //= 10  
  
if num == sum:  
   print(num,"is an Armstrong number")  
else:  
   print(num,"is not an Armstrong number")
